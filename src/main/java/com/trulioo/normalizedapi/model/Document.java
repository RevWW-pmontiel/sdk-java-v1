/*
 * OnlineID.NormalizedAPI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.trulioo.normalizedapi.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-03T13:54:47.084-08:00")
public class Document {
  @SerializedName("DocumentFrontImage")
  private byte[] documentFrontImage = null;

  @SerializedName("DocumentBackImage")
  private byte[] documentBackImage = null;

  @SerializedName("LivePhoto")
  private byte[] livePhoto = null;

  @SerializedName("DocumentType")
  private String documentType = null;

  @SerializedName("AcceptIncompleteDocument")
  private Boolean acceptIncompleteDocument = null;

  @SerializedName("ValidateDocumentImageQuality")
  private Boolean validateDocumentImageQuality = null;

  public Document documentFrontImage(byte[] documentFrontImage) {
    this.documentFrontImage = documentFrontImage;
    return this;
  }

   /**
   * Front of the document
   * @return documentFrontImage
  **/
  @ApiModelProperty(value = "Front of the document")
  public byte[] getDocumentFrontImage() {
    return documentFrontImage;
  }

  public void setDocumentFrontImage(byte[] documentFrontImage) {
    this.documentFrontImage = documentFrontImage;
  }

  public Document documentBackImage(byte[] documentBackImage) {
    this.documentBackImage = documentBackImage;
    return this;
  }

   /**
   * Back of the document
   * @return documentBackImage
  **/
  @ApiModelProperty(value = "Back of the document")
  public byte[] getDocumentBackImage() {
    return documentBackImage;
  }

  public void setDocumentBackImage(byte[] documentBackImage) {
    this.documentBackImage = documentBackImage;
  }

  public Document livePhoto(byte[] livePhoto) {
    this.livePhoto = livePhoto;
    return this;
  }

   /**
   * Selfie image
   * @return livePhoto
  **/
  @ApiModelProperty(value = "Selfie image")
  public byte[] getLivePhoto() {
    return livePhoto;
  }

  public void setLivePhoto(byte[] livePhoto) {
    this.livePhoto = livePhoto;
  }

  public Document documentType(String documentType) {
    this.documentType = documentType;
    return this;
  }

   /**
   * Document type
   * @return documentType
  **/
  @ApiModelProperty(value = "Document type")
  public String getDocumentType() {
    return documentType;
  }

  public void setDocumentType(String documentType) {
    this.documentType = documentType;
  }

  public Document acceptIncompleteDocument(Boolean acceptIncompleteDocument) {
    this.acceptIncompleteDocument = acceptIncompleteDocument;
    return this;
  }

   /**
   * Accept Incomplete Document
   * @return acceptIncompleteDocument
  **/
  @ApiModelProperty(value = "Accept Incomplete Document")
  public Boolean getAcceptIncompleteDocument() {
    return acceptIncompleteDocument;
  }

  public void setAcceptIncompleteDocument(Boolean acceptIncompleteDocument) {
    this.acceptIncompleteDocument = acceptIncompleteDocument;
  }

  public Document validateDocumentImageQuality(Boolean validateDocumentImageQuality) {
    this.validateDocumentImageQuality = validateDocumentImageQuality;
    return this;
  }

   /**
   * Validate Document Image Quality
   * @return validateDocumentImageQuality
  **/
  @ApiModelProperty(value = "Validate Document Image Quality")
  public Boolean getValidateDocumentImageQuality() {
    return validateDocumentImageQuality;
  }

  public void setValidateDocumentImageQuality(Boolean validateDocumentImageQuality) {
    this.validateDocumentImageQuality = validateDocumentImageQuality;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Document document = (Document) o;
    return Objects.equals(this.documentFrontImage, document.documentFrontImage) &&
        Objects.equals(this.documentBackImage, document.documentBackImage) &&
        Objects.equals(this.livePhoto, document.livePhoto) &&
        Objects.equals(this.documentType, document.documentType) &&
        Objects.equals(this.acceptIncompleteDocument, document.acceptIncompleteDocument) &&
        Objects.equals(this.validateDocumentImageQuality, document.validateDocumentImageQuality);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentFrontImage, documentBackImage, livePhoto, documentType, acceptIncompleteDocument, validateDocumentImageQuality);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Document {\n");
    
    sb.append("    documentFrontImage: ").append(toIndentedString(documentFrontImage)).append("\n");
    sb.append("    documentBackImage: ").append(toIndentedString(documentBackImage)).append("\n");
    sb.append("    livePhoto: ").append(toIndentedString(livePhoto)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    acceptIncompleteDocument: ").append(toIndentedString(acceptIncompleteDocument)).append("\n");
    sb.append("    validateDocumentImageQuality: ").append(toIndentedString(validateDocumentImageQuality)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

