/*
 * OnlineID.NormalizedAPI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.trulioo.normalizedapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.trulioo.normalizedapi.model.NormalizedDatasourceField;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Datasource group config for country
 */
@ApiModel(description = "Datasource group config for country")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-08-28T15:09:55.671-07:00")
public class NormalizedDatasourceGroupCountry {
  @SerializedName("Name")
  private String name = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("RequiredFields")
  private List<NormalizedDatasourceField> requiredFields = null;

  @SerializedName("OptionalFields")
  private List<NormalizedDatasourceField> optionalFields = null;

  @SerializedName("AppendedFields")
  private List<NormalizedDatasourceField> appendedFields = null;

  @SerializedName("OutputFields")
  private List<NormalizedDatasourceField> outputFields = null;

  @SerializedName("SourceType")
  private String sourceType = null;

  @SerializedName("UpdateFrequency")
  private String updateFrequency = null;

  @SerializedName("Coverage")
  private String coverage = null;

  public NormalizedDatasourceGroupCountry name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @ApiModelProperty(value = "Name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public NormalizedDatasourceGroupCountry description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description
   * @return description
  **/
  @ApiModelProperty(value = "Description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public NormalizedDatasourceGroupCountry requiredFields(List<NormalizedDatasourceField> requiredFields) {
    this.requiredFields = requiredFields;
    return this;
  }

  public NormalizedDatasourceGroupCountry addRequiredFieldsItem(NormalizedDatasourceField requiredFieldsItem) {
    if (this.requiredFields == null) {
      this.requiredFields = new ArrayList<NormalizedDatasourceField>();
    }
    this.requiredFields.add(requiredFieldsItem);
    return this;
  }

   /**
   * Required Fields
   * @return requiredFields
  **/
  @ApiModelProperty(value = "Required Fields")
  public List<NormalizedDatasourceField> getRequiredFields() {
    return requiredFields;
  }

  public void setRequiredFields(List<NormalizedDatasourceField> requiredFields) {
    this.requiredFields = requiredFields;
  }

  public NormalizedDatasourceGroupCountry optionalFields(List<NormalizedDatasourceField> optionalFields) {
    this.optionalFields = optionalFields;
    return this;
  }

  public NormalizedDatasourceGroupCountry addOptionalFieldsItem(NormalizedDatasourceField optionalFieldsItem) {
    if (this.optionalFields == null) {
      this.optionalFields = new ArrayList<NormalizedDatasourceField>();
    }
    this.optionalFields.add(optionalFieldsItem);
    return this;
  }

   /**
   * Optional Fields
   * @return optionalFields
  **/
  @ApiModelProperty(value = "Optional Fields")
  public List<NormalizedDatasourceField> getOptionalFields() {
    return optionalFields;
  }

  public void setOptionalFields(List<NormalizedDatasourceField> optionalFields) {
    this.optionalFields = optionalFields;
  }

  public NormalizedDatasourceGroupCountry appendedFields(List<NormalizedDatasourceField> appendedFields) {
    this.appendedFields = appendedFields;
    return this;
  }

  public NormalizedDatasourceGroupCountry addAppendedFieldsItem(NormalizedDatasourceField appendedFieldsItem) {
    if (this.appendedFields == null) {
      this.appendedFields = new ArrayList<NormalizedDatasourceField>();
    }
    this.appendedFields.add(appendedFieldsItem);
    return this;
  }

   /**
   * Appended Fields
   * @return appendedFields
  **/
  @ApiModelProperty(value = "Appended Fields")
  public List<NormalizedDatasourceField> getAppendedFields() {
    return appendedFields;
  }

  public void setAppendedFields(List<NormalizedDatasourceField> appendedFields) {
    this.appendedFields = appendedFields;
  }

  public NormalizedDatasourceGroupCountry outputFields(List<NormalizedDatasourceField> outputFields) {
    this.outputFields = outputFields;
    return this;
  }

  public NormalizedDatasourceGroupCountry addOutputFieldsItem(NormalizedDatasourceField outputFieldsItem) {
    if (this.outputFields == null) {
      this.outputFields = new ArrayList<NormalizedDatasourceField>();
    }
    this.outputFields.add(outputFieldsItem);
    return this;
  }

   /**
   * Output Fields
   * @return outputFields
  **/
  @ApiModelProperty(value = "Output Fields")
  public List<NormalizedDatasourceField> getOutputFields() {
    return outputFields;
  }

  public void setOutputFields(List<NormalizedDatasourceField> outputFields) {
    this.outputFields = outputFields;
  }

  public NormalizedDatasourceGroupCountry sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Source Type
   * @return sourceType
  **/
  @ApiModelProperty(value = "Source Type")
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }

  public NormalizedDatasourceGroupCountry updateFrequency(String updateFrequency) {
    this.updateFrequency = updateFrequency;
    return this;
  }

   /**
   * Update Frequency
   * @return updateFrequency
  **/
  @ApiModelProperty(value = "Update Frequency")
  public String getUpdateFrequency() {
    return updateFrequency;
  }

  public void setUpdateFrequency(String updateFrequency) {
    this.updateFrequency = updateFrequency;
  }

  public NormalizedDatasourceGroupCountry coverage(String coverage) {
    this.coverage = coverage;
    return this;
  }

   /**
   * Coverage
   * @return coverage
  **/
  @ApiModelProperty(value = "Coverage")
  public String getCoverage() {
    return coverage;
  }

  public void setCoverage(String coverage) {
    this.coverage = coverage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NormalizedDatasourceGroupCountry normalizedDatasourceGroupCountry = (NormalizedDatasourceGroupCountry) o;
    return Objects.equals(this.name, normalizedDatasourceGroupCountry.name) &&
        Objects.equals(this.description, normalizedDatasourceGroupCountry.description) &&
        Objects.equals(this.requiredFields, normalizedDatasourceGroupCountry.requiredFields) &&
        Objects.equals(this.optionalFields, normalizedDatasourceGroupCountry.optionalFields) &&
        Objects.equals(this.appendedFields, normalizedDatasourceGroupCountry.appendedFields) &&
        Objects.equals(this.outputFields, normalizedDatasourceGroupCountry.outputFields) &&
        Objects.equals(this.sourceType, normalizedDatasourceGroupCountry.sourceType) &&
        Objects.equals(this.updateFrequency, normalizedDatasourceGroupCountry.updateFrequency) &&
        Objects.equals(this.coverage, normalizedDatasourceGroupCountry.coverage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, requiredFields, optionalFields, appendedFields, outputFields, sourceType, updateFrequency, coverage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NormalizedDatasourceGroupCountry {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    requiredFields: ").append(toIndentedString(requiredFields)).append("\n");
    sb.append("    optionalFields: ").append(toIndentedString(optionalFields)).append("\n");
    sb.append("    appendedFields: ").append(toIndentedString(appendedFields)).append("\n");
    sb.append("    outputFields: ").append(toIndentedString(outputFields)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    updateFrequency: ").append(toIndentedString(updateFrequency)).append("\n");
    sb.append("    coverage: ").append(toIndentedString(coverage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

