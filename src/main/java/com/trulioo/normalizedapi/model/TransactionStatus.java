/*
 * OnlineID.NormalizedAPI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.trulioo.normalizedapi.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

/**
 * Transaction Status
 */
@ApiModel(description = "Transaction Status")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-03T13:54:47.084-08:00")
public class TransactionStatus {
  @SerializedName("TransactionId")
  private String transactionId = null;

  @SerializedName("TransactionRecordId")
  private String transactionRecordId = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("UploadedDt")
  private DateTime uploadedDt = null;

  @SerializedName("IsTimedOut")
  private Boolean isTimedOut = null;

  public TransactionStatus transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Transaction ID of the transaction
   * @return transactionId
  **/
  @ApiModelProperty(value = "Transaction ID of the transaction")
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }

  public TransactionStatus transactionRecordId(String transactionRecordId) {
    this.transactionRecordId = transactionRecordId;
    return this;
  }

   /**
   * Transaction Record ID of the transaction available once the transaction has finished processing
   * @return transactionRecordId
  **/
  @ApiModelProperty(value = "Transaction Record ID of the transaction available once the transaction has finished processing")
  public String getTransactionRecordId() {
    return transactionRecordId;
  }

  public void setTransactionRecordId(String transactionRecordId) {
    this.transactionRecordId = transactionRecordId;
  }

  public TransactionStatus status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the transaction. Possible Values: Uploading, Processing, Completed, InProgress, Failed, WaitAsync, ToBeResumed, Canceled, TimeoutCanceled. Call GetTransactionRecord when status changes to Completed, Failed, Canceled or TimeoutCanceled to get the verification results.
   * @return status
  **/
  @ApiModelProperty(value = "Status of the transaction. Possible Values: Uploading, Processing, Completed, InProgress, Failed, WaitAsync, ToBeResumed, Canceled, TimeoutCanceled. Call GetTransactionRecord when status changes to Completed, Failed, Canceled or TimeoutCanceled to get the verification results.")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public TransactionStatus uploadedDt(DateTime uploadedDt) {
    this.uploadedDt = uploadedDt;
    return this;
  }

   /**
   * Uploaded date for transaction
   * @return uploadedDt
  **/
  @ApiModelProperty(value = "Uploaded date for transaction")
  public DateTime getUploadedDt() {
    return uploadedDt;
  }

  public void setUploadedDt(DateTime uploadedDt) {
    this.uploadedDt = uploadedDt;
  }

  public TransactionStatus isTimedOut(Boolean isTimedOut) {
    this.isTimedOut = isTimedOut;
    return this;
  }

   /**
   * Set to true when transaction has timed out
   * @return isTimedOut
  **/
  @ApiModelProperty(value = "Set to true when transaction has timed out")
  public Boolean getIsTimedOut() {
    return isTimedOut;
  }

  public void setIsTimedOut(Boolean isTimedOut) {
    this.isTimedOut = isTimedOut;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionStatus transactionStatus = (TransactionStatus) o;
    return Objects.equals(this.transactionId, transactionStatus.transactionId) &&
        Objects.equals(this.transactionRecordId, transactionStatus.transactionRecordId) &&
        Objects.equals(this.status, transactionStatus.status) &&
        Objects.equals(this.uploadedDt, transactionStatus.uploadedDt) &&
        Objects.equals(this.isTimedOut, transactionStatus.isTimedOut);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionId, transactionRecordId, status, uploadedDt, isTimedOut);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionStatus {\n");
    
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    transactionRecordId: ").append(toIndentedString(transactionRecordId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    uploadedDt: ").append(toIndentedString(uploadedDt)).append("\n");
    sb.append("    isTimedOut: ").append(toIndentedString(isTimedOut)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

